#!/usr/bin/env python
#
# Created by Jeremy Bowman on Mon Apr 27 17:05:37 EDT 2015
# Copyright (c) 2015 Safari Books Online. All rights reserved.
#
# This script is always run from the project root

from __future__ import print_function, unicode_literals

import codecs
import os
import re
import shlex
import subprocess
    

def popen(cmd):
    args = shlex.split(cmd)
    return subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, universal_newlines=True).stdout

diff = popen('git diff --name-only HEAD@{1} HEAD')
changed_files = {filename.strip() for filename in diff}

if any('git-hooks' in f for f in changed_files):
    # update git hooks
    os.system('git-hooks/install-hooks')

# always delete pyc files
print('Deleting .pyc files in project dir')
os.system("find . -name '*pyc' -delete")

virtual_env = os.environ.get('VIRTUAL_ENV')
if virtual_env:
    python = os.path.join(virtual_env, 'bin', 'python')

    # put stuff that requires virtualenv here

    # delete all .pyc files in the virtual env
    print('Deleting .pyc files in virtualenv')
    os.system("find %s -name '*pyc' -delete" % virtual_env)

    # Install the currently recommended setuptools and pip versions
    with codecs.open('requirements/base.txt', 'r', 'utf-8') as f:
        requirements = f.read()
    match = re.search(r'^setuptools==([\d\.]+)$', requirements, re.MULTILINE)
    os.system('pip install setuptools=={}'.format(match.group(1)))
    match = re.search(r'^pip==([\d\.]+)$', requirements, re.MULTILINE)
    os.system('pip install pip=={}'.format(match.group(1)))

    # Install other dependencies
    os.system("pip install --disable-pip-version-check --requirement requirements/base.txt")
    os.system("pip install --disable-pip-version-check --requirement requirements/tests.txt")
    os.system("pip install --disable-pip-version-check --editable ./")
